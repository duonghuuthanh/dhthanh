<h1 class="text-center text-danger"><span><strong>PHONG C&Aacute;CH LẬP TR&Igrave;NH</strong></span></h1>

<p><span style="color:#000000"><em>Việc ph&aacute;t triển phần mềm n&oacute;i chung v&agrave; c&ocirc;ng đoạn lập tr&igrave;nh n&oacute;i ri&ecirc;ng đ&ograve;i hỏi t&iacute;nh logic, chặt chẽ v&agrave; tinh thần đồng đội. Nếu việc lập tr&igrave;nh kh&ocirc;ng c&oacute; quy tắc, ti&ecirc;u chuẩn chung sẽ dễ dẫn đến t&igrave;nh trạng mất kiểm so&aacute;t m&atilde; nguồn chương tr&igrave;nh, kh&oacute; ph&aacute;t triển, kh&oacute; bảo tr&igrave;, dễ d&agrave;ng ph&aacute;t sinh lỗi kh&ocirc;ng lường trước, c&aacute;c th&agrave;nh vi&ecirc;n mới kh&oacute; kế thừa chương tr&igrave;nh của th&agrave;nh vi&ecirc;n cũ, hay th&agrave;nh vi&ecirc;n đang ph&aacute;t triển dự &aacute;n. Điều đ&oacute; c&oacute; thể dẫn đến nhiều rủi ro về nguồn nh&acirc;n lực, thời gian v&agrave; chi ph&iacute; trong ph&aacute;t triển phần mềm, thẩm ch&iacute; sẽ giảm bớt niềm tin của kh&aacute;ch h&agrave;ng v&agrave;o sản phầm nếu n&oacute; triển khai kh&ocirc;ng đ&uacute;ng hạn, hoặc kh&ocirc;ng c&oacute; khả năng chịu lỗi. Do đ&oacute;, lập tr&igrave;nh theo ti&ecirc;u chuẩn, quy tắc chung l&agrave; việc l&agrave;m hết sức cần thiết trong c&ocirc;ng nghiệp ph&aacute;t triển phần mềm, việc h&igrave;nh th&agrave;nh một phong c&aacute;ch, văn h&oacute;a lập tr&igrave;nh ri&ecirc;ng ở từng doanh nghiệp sẽ giảm bớt rất nhiều rủi ro trong ph&aacute;t triển phần mềm. Trong b&agrave;i viết n&agrave;y, chung t&ocirc;i mạn ph&eacute;p tr&igrave;nh b&agrave;y một số chuẩn lập tr&igrave;nh chung, cũng như một số quy tắc th&ocirc;ng dụng m&agrave; ch&uacute;ng t&ocirc;i cho rằng l&agrave; quan trọng với tất cả c&aacute;c lập tr&igrave;nh vi&ecirc;n chuy&ecirc;n nghiệp.&nbsp;</em></span></p>

<h3><span style="color:#000000"><strong>Tổng quan</strong></span></h3>

<p><span style="color:#000000">Phong c&aacute;ch lập tr&igrave;nh l&agrave; những quy tắc hay chỉ dẫn để viết m&atilde; nguồn, viết m&atilde; nguồn theo chuẩn gi&uacute;p chương tr&igrave;nh trở n&acirc;ng dễ đọc, dễ hiểu, dễ bảo tr&igrave;, khả năng t&aacute;i sử dụng m&atilde; nguồn cao, tr&aacute;nh được nhiều lỗi kh&ocirc;ng cần thiết. T&ugrave;y v&agrave;o từng &ldquo;trường ph&aacute;i&rdquo; ng&ocirc;n ngữ lập tr&igrave;nh v&agrave; quy định của doanh nghiệp m&agrave; mỗi nơi c&oacute; thể sẽ định nghĩa ra những quy tắc chuẩn lập tr&igrave;nh kh&aacute;c nhau. Tuy nhi&ecirc;n, ch&uacute;ng sẽ c&oacute; những điểm ch&uacute; &yacute; chung m&agrave; c&aacute;c lập tr&igrave;nh vi&ecirc;n cần quan t&acirc;m để m&atilde; nguồn viết ra c&oacute; t&iacute;nh hiệu quả, dễ bảo tr&igrave;, c&aacute;c th&agrave;nh vi&ecirc;n l&agrave;m việc chung với nhau đều c&oacute; thể đọc v&agrave; hiểu dễ d&agrave;ng. Ngo&agrave;i ra, việc lập tr&igrave;nh c&oacute; phong c&aacute;ch gi&uacute;p chương tr&igrave;nh, cũng như ch&iacute;nh lập tr&igrave;nh vi&ecirc;n trở n&ecirc;n chuy&ecirc;n nghiệp hơn v&agrave; đ&aacute;ng tin cậy hơn.</span></p>

<h3><span style="color:#000000"><strong>Quy tắc đặt t&ecirc;n</strong></span></h3>

<p><span style="color:#000000">Đặt t&ecirc;n bao gồm t&ecirc;n biến, t&ecirc;n h&agrave;m, phương thức, t&ecirc;n lớp, t&ecirc;n tập tin, t&ecirc;n g&oacute;i, t&ecirc;n project. Việc đặt t&ecirc;n hiệu quả sẽ gi&uacute;p chương tr&igrave;nh nhất qu&aacute;n, dễ d&agrave;ng quản l&yacute; cấu tr&uacute;c, v&agrave; nguồn chương tr&igrave;nh. Tiết kiệm nhiều thời gian v&agrave; chi phi huấn luyện cho c&aacute;c th&agrave;nh vi&ecirc;n mới tham gia v&agrave;o dự &aacute;n.&nbsp;</span></p>

<h4><span style="color:#000000"><strong><em>Quy tắc lạc đ&agrave; (Camel Case)</em></strong></span></h4>

<p><span style="color:#000000">Upper Camel Case hay Pascal Case: c&aacute;c chữ c&aacute;i đầu ti&ecirc;n của mỗi từ phải viết hoa. V&iacute; dụ trong Java việc đặt t&ecirc;n lớp theo quy tắc Upper Camel Case đặt t&ecirc;n cho lớp (class) như SinhVien, HocVien, DanhMuc, HoaDon, v.v., hay trong C# t&ecirc;n lớp, phương thức thường d&ugrave;ng quy tắc n&agrave;y đặt t&ecirc;n.</span></p>

<p><span style="color:#000000">Lower Camel Case: tương tự Upper Camel Case nhưng chữ c&aacute;i đầu của từ đầu ti&ecirc;n viết thường. V&iacute; dụ trong Java sử dụng quy tắc Lower Camel Case đặt t&ecirc;n cho c&aacute;c thuộc t&iacute;nh (biến), c&aacute;c phương thức như heSoLuong, hoTen, queQuan, tinhTienLuong(), tinhDiemTB(), v.v.</span></p>

<p><img src="images/lessons/2021/07/02/image-20210702105542-1.png" style="height:304px; width:368px" /></p>

<p><span style="color:#44546a"><em>Camel Case (nguồn: wikipedia)</em></span></p>

<h4><span style="color:#000000"><strong><em>Quy tắc Hungary</em></strong></span></h4>

<p><span style="color:#000000">Quy tắc n&agrave;y thường kết hợp Upper Camel Case. Mục đ&iacute;ch quy tắc n&agrave;y để tăng khả năng nhận biết kiểu dữ liệu của biến bằng c&aacute;ch gắn trước mỗi t&ecirc;n biến một hay v&agrave;i k&yacute; tự thể hiện kiểu dữ liệu của ch&uacute;ng. V&iacute; dụ:</span></p>

<ul>
	<li style="list-style-type:disc"><span style="color:#000000">iSoLuong </span><span style="color:#000000">&rarr;</span><span style="color:#000000"> biến số nguy&ecirc;n chứa số lượng.</span></li>
	<li style="list-style-type:disc"><span style="color:#000000">bLaNguyenTo </span><span style="color:#000000">&rarr;</span><span style="color:#000000"> biến boolean c&oacute; l&agrave; số nguy&ecirc;n tố kh&ocirc;ng.</span></li>
	<li style="list-style-type:disc"><span style="color:#000000">strHoTen </span><span style="color:#000000">&rarr;</span><span style="color:#000000"> chuỗi chứa họ t&ecirc;n</span></li>
</ul>

<p><span style="color:#000000">Hay trong một số ứng dụng lập tr&igrave;nh giao diện đặt t&ecirc;n cho c&aacute;c điều khiển trong ứng dụng thường hay d&ugrave;ng quy tắc n&agrave;y. V&iacute; dụ:</span></p>

<ul>
	<li style="list-style-type:disc"><span style="color:#000000">txtHeSo </span><span style="color:#000000">&rarr;</span><span style="color:#000000"> điều khiển &ocirc; nhập điều (TextBox) chứa hệ số.</span></li>
	<li style="list-style-type:disc"><span style="color:#000000">chkDongY </span><span style="color:#000000">&rarr;</span><span style="color:#000000"> điều khiển CheckBox đồng &yacute; hay kh&ocirc;ng.</span></li>
	<li style="list-style-type:disc"><span style="color:#000000">rdoMale </span><span style="color:#000000">&rarr;</span><span style="color:#000000"> điều khiển RadioButton l&agrave; ph&aacute;i nam.</span></li>
	<li style="list-style-type:disc"><span style="color:#000000">btnTinhLuong </span><span style="color:#000000">&rarr;</span><span style="color:#000000"> điều khiển Button thực hiện t&iacute;nh tiền lương.</span></li>
</ul>

<h4><span style="color:#000000"><strong><em>Quy tắc con rắn (Snake Case)</em></strong></span></h4>

<p><span style="color:#000000">Tất cả c&aacute;c k&yacute; tự đều viết thường, c&aacute;c từ c&aacute;ch nhau bằng dấu gạch ch&acirc;n _.</span></p>

<p><span style="color:#000000">V&iacute; dụ: lập tr&igrave;nh vi&ecirc;n với ng&ocirc;n ngữ Python quy tắc Upper Camel Case cho t&ecirc;n lớp v&agrave; quy tắc Snake n&agrave;y cho việc đặt t&ecirc;n biến, t&ecirc;n h&agrave;m, phương thức như first_name, last_name.</span></p>

<p><span style="color:#000000">Việc sử dụng quy tắc n&agrave;o phụ thuộc v&agrave;o ng&ocirc;n ngữ lập tr&igrave;nh, phong c&aacute;ch, văn h&oacute;a của từng doanh nghiệp. Ngo&agrave;i c&aacute;ch thức đặt t&ecirc;n ra, việc chọn t&ecirc;n để đặt lại l&agrave; một vấn đề mang t&iacute;nh chất nghệ thuật y&ecirc;u cầu cần c&oacute; sự chắt lọc, lựa chọn ph&ugrave; hợp, v&agrave; lập tr&igrave;nh vi&ecirc;n ch&iacute;nh l&agrave; nghệ sĩ trong lựa chọn t&ecirc;n để đặt. Việc đặt t&ecirc;n biến, t&ecirc;n h&agrave;m, t&ecirc;n lớp, t&ecirc;n g&oacute;i n&ecirc;n ưu ti&ecirc;n ngắn gọn, dễ hiễu, m&ocirc; tả được mục đ&iacute;ch của n&oacute;. Đối với c&aacute;c lập tr&igrave;nh vi&ecirc;n chuy&ecirc;n nghi&ecirc;p, đ&ocirc;i l&uacute;c chỉ cần đọc qua t&ecirc;n biến hay t&ecirc;n h&agrave;m th&igrave; họ cũng đo&aacute;n được phần n&agrave;o &yacute; nghĩa của đoạn chương tr&igrave;nh m&agrave; họ sắp đọc.&nbsp;</span></p>

<h3><span style="color:#000000"><strong>Một số nguy&ecirc;n tắc chung khi lập tr&igrave;nh</strong></span></h3>

<p><span style="color:#000000">Trong phần n&agrave;y tổng hợp một số quy tắc th&ocirc;ng dụng nhất khi viết m&atilde; nguồn để chương tr&igrave;nh trong s&aacute;ng, dễ đọc, dễ hiểu, việc bảo tr&igrave; v&agrave; t&aacute;i sử dụng chương tr&igrave;nh trở n&ecirc;n hiệu quả hơn.</span></p>

<p><span style="color:#000000"><strong><em>Nguy&ecirc;n tắc 1</em></strong></span><span style="color:#000000">: chương tr&igrave;nh n&ecirc;n được t&aacute;ch th&agrave;nh nhiều chương tr&igrave;nh con (h&agrave;m hay thủ tục), mỗi chương tr&igrave;nh con c&agrave;ng độc lập với nhau c&agrave;ng tốt. Điều n&agrave;y gi&uacute;p chương tr&igrave;nh dễ đọc, dễ bảo tr&igrave; v&agrave; n&acirc;ng cấp.</span></p>

<p><span style="color:#000000"><strong><em>Nguy&ecirc;n tắc 2</em></strong></span><span style="color:#000000">: n&ecirc;n sử dụng c&aacute;c tham số khi truyền dữ liệu v&agrave;o h&agrave;m, hạn chế tối đa sử dụng c&aacute;c biến to&agrave;n cục truyền th&ocirc;ng tin giữa c&aacute;c h&agrave;m v&igrave; n&oacute; sẽ l&agrave;m mất đi t&iacute;nh độc lập giữa c&aacute;c h&agrave;m, sự thay đổi dữ liệu rất kh&oacute; kiểm so&aacute;t.&nbsp;</span></p>

<table border="1" cellpadding="5" cellspacing="0" style="border-collapse:collapse; line-height:15px; width:100%">
	<tbody>
		<tr>
			<td style="width:50%">
			<p><code>// bad<br />
			int m, n;<br />
			&nbsp;<br />
			void nhap()<br />
			{<br />
			&nbsp;&nbsp; &nbsp;cin &gt;&gt; m;<br />
			&nbsp;&nbsp; &nbsp;cin &gt;&gt; n;<br />
			}<br />
			&nbsp;<br />
			int main()<br />
			{<br />
			&nbsp;&nbsp; &nbsp;nhap();<br />
			&nbsp;&nbsp; &nbsp;<br />
			&nbsp;&nbsp; &nbsp;return 0;<br />
			}</code></p>
			</td>
			<td><code>// good<br />
			void nhap(int &amp;m, int &amp;n)<br />
			{<br />
			&nbsp;&nbsp; &nbsp;cin &gt;&gt; m;<br />
			&nbsp;&nbsp; &nbsp;cin &gt;&gt; n;<br />
			}<br />
			&nbsp;<br />
			int main()<br />
			{<br />
			&nbsp;&nbsp; &nbsp;int m, n;<br />
			&nbsp;&nbsp; &nbsp;nhap(m, n);<br />
			&nbsp;&nbsp; &nbsp;<br />
			&nbsp;&nbsp; &nbsp;return 0;<br />
			}</code><br />
			&nbsp;</td>
		</tr>
	</tbody>
</table>

<p><span style="color:#000000"><strong><em>Nguy&ecirc;n tắc 3</em></strong></span><span style="color:#000000">: n&ecirc;n sử dụng c&aacute;c chuẩn lập tr&igrave;nh chung đảm bảo chương tr&igrave;nh nhất qu&aacute;n từ c&aacute;ch đặt t&ecirc;n biến, t&ecirc;n h&agrave;m, biến cục bộ, biến to&agrave;n cục. Chương tr&igrave;nh c&agrave;ng nhất qu&aacute;n sẽ c&agrave;ng tăng t&iacute;nh dễ đọc, dễ hiểu, giảm&nbsp; bớt nhiều thời gian của lập tr&igrave;nh vi&ecirc;n phải để suy nghĩ c&aacute;ch viết chương tr&igrave;nh, m&agrave; c&oacute; thể tập trung vấn đề cần giải quyết. Chẳng hạn quy tắc đặt t&ecirc;n trong Java theo quy ước LowerCamelCase, th&igrave; xuy&ecirc;t suốt to&agrave;n bộ chương tr&igrave;nh n&ecirc;n tu&acirc;n thủ quy tắc n&agrave;y, kh&ocirc;ng n&ecirc;n t&ugrave;y tiện thay đổi theo &yacute; th&iacute;ch của bản th&acirc;n, sẽ dấn đến nhiều nhập nhằng, phiền to&aacute;i cho c&aacute;c đồng nghiệp v&agrave; thẩm ch&iacute; l&agrave; ch&iacute;nh bản th&acirc;n m&igrave;nh.</span></p>

<p><span style="color:#000000"><strong><em>Nguy&ecirc;n tắc 4</em></strong></span><span style="color:#000000">: chương tr&igrave;nh viết n&ecirc;n đơn giản, r&otilde; r&agrave;ng, tường minh, thể hiện mục đ&iacute;ch của n&oacute;. Tr&aacute;nh viết m&atilde; nguồn tối nghĩa, ngầm định sẽ kh&oacute; khăn cho c&aacute;c th&agrave;nh vi&ecirc;n kh&aacute;c đọc, hiểu, cũng như ch&iacute;nh bản th&acirc;n sau một khoảng thời gian xem lại m&atilde; nguồn của ch&iacute;nh m&igrave;nh, thẩm ch&iacute; trong v&agrave;i t&iacute;nh huống sẽ dẫn đến những nhập nhằng kh&ocirc;ng đ&aacute;ng của ng&ocirc;n ngữ lập tr&igrave;nh. Thử x&eacute;t v&iacute; dụ sau trong ng&ocirc;n ngữ lập tr&igrave;nh C++, c&aacute;c bạn thử đo&aacute;n kết quả xuất ra m&agrave;n h&igrave;nh của đoạn chương tr&igrave;nh:</span></p>

<table border="1" cellpadding="5" cellspacing="0" style="border-collapse:collapse; line-height:10px; width:100%">
	<tbody>
		<tr>
			<td style="width:50%">
			<p><code><span style="color:#0000ff">int</span><span style="color:#000000"> a = 0;</span></code></p>

			<p><code><span style="color:#000000">cout </span><span style="color:#008080">&lt;&lt;</span><span style="color:#000000"> ++a </span><span style="color:#008080">&lt;&lt;</span><span style="color:#000000"> a++;</span></code></p>

			<p><code><span style="color:#000000">cout &lt;&lt; a &lt;&lt; endl;</span></code></p>
			</td>
		</tr>
	</tbody>
</table>

<p><span style="color:#000000">Đoạn chương tr&igrave;nh tr&ecirc;n mong muốn xuất ra l&agrave; 1 1 2. Tuy nhi&ecirc;n thực tế kết quả kh&ocirc;ng như vậy, m&agrave; kết quả xuất ra phụ thuộc v&agrave;o từng tr&igrave;nh bi&ecirc;n dịch đang thực thi C++, c&aacute;c bạn thử chạy đoạn chương tr&igrave;nh tr&ecirc;n tại </span><a href="http://rextester.com/" style="text-decoration:none"><span style="color:#0563c1"><u>http://rextester.com/</u></span></a><span style="color:#000000"> với c&aacute;c tr&igrave;nh bi&ecirc;n dịch C++ (gcc), C++ (vc++), C++ (clang) sẽ cho ra c&aacute;c kết quả kh&aacute;c nhau của đoạn chương tr&igrave;nh n&agrave;y. Đ&acirc;y l&agrave; vấn đề undefined behavior trong C++, ch&uacute;ng t&ocirc;i sẽ b&agrave;n vấn đề n&agrave;y trong một dịp kh&aacute;c.&nbsp;</span></p>

<p><span style="color:#000000"><strong><em>Nguy&ecirc;n tắc 5</em></strong></span><span style="color:#000000">: mỗi biến n&ecirc;n sử dụng chỉ với một mục đ&iacute;ch, kh&ocirc;ng n&ecirc;n sử dụng biến nhiều nơi trong h&agrave;m với c&aacute;c mục đ&iacute;ch kh&aacute;c nhau, t&ecirc;n biến đặt ngắn gọn, thể hiện c&ocirc; đ&oacute;ng &yacute; nghĩa của biến v&agrave; n&ecirc;n tu&acirc;n theo chuẩn đặt t&ecirc;n được y&ecirc;u cầu trong nh&oacute;m ph&aacute;t triển.&nbsp;</span></p>

<p><span style="color:#000000">Đối với c&aacute;c biến hằng n&ecirc;n d&ugrave;ng c&aacute;c k&yacute; tự in hoa, nếu c&oacute; nhiều từ th&igrave; c&aacute;ch nhau bằng dấu gạch ch&acirc;n _.</span></p>

<table border="1" cellpadding="5" cellspacing="0" style="border-collapse:collapse; line-height:10px; width:100%">
	<tbody>
		<tr>
			<td style="width:50%">
			<p><code><span style="color:#0000ff">const</span><span style="color:#000000"> </span><span style="color:#0000ff">int</span><span style="color:#000000"> MAX = 100;</span></code></p>

			<p><code><span style="color:#0000ff">const</span><span style="color:#000000"> </span><span style="color:#0000ff">int</span><span style="color:#000000"> NUMBER_OF_USER = 100;</span></code></p>
			</td>
		</tr>
	</tbody>
</table>

<p><span style="color:#000000"><strong><em>Nguy&ecirc;n tắc 6</em></strong></span><span style="color:#000000">: canh lề (Alignment), thụt d&ograve;ng (Indentation), khoảng trắng (Space)</span></p>

<ul>
	<li style="list-style-type:disc"><span style="color:#000000">Mỗi c&acirc;u lệnh n&ecirc;n được đặt ri&ecirc;ng tr&ecirc;n một d&ograve;ng gi&uacute;p m&atilde; nguồn trở n&ecirc;n r&otilde; r&agrave;ng, dễ đọc, dễ theo d&otilde;i, cũng như qu&aacute; tr&igrave;nh gỡ lỗi (debug) thuận tiện, hiệu quả hơn.&nbsp;</span></li>
</ul>

<table border="1" cellpadding="5" cellspacing="0" style="border-collapse:collapse; line-height:10px; width:100%">
	<tbody>
		<tr>
			<td style="width:50%">
			<p><code><span style="color:#008000">// bad</span></code></p>

			<p><code><span style="color:#0000ff">if</span><span style="color:#000000"> (a % 2 == 0) cout &lt;&lt; </span><span style="color:#a31515">&quot;Even&quot;</span><span style="color:#000000">;</span></code></p>

			<p><code><span style="color:#0000ff">else</span><span style="color:#000000"> cout &lt;&lt; </span><span style="color:#a31515">&quot;Odd&quot;</span><span style="color:#000000">;</span></code></p>
			</td>
			<td>
			<p><code><span style="color:#008000">// good</span></code></p>

			<p><code><span style="color:#0000ff">if</span><span style="color:#000000"> (a % 2 == 0)&nbsp;</span></code></p>

			<p><code><span style="color:#000000">&nbsp; &nbsp; &nbsp;cout &lt;&lt; </span><span style="color:#a31515">&quot;Even&quot;</span><span style="color:#000000">;</span></code></p>

			<p><code><span style="color:#0000ff">else</span><span style="color:#000000">&nbsp;</span></code></p>

			<p><code><span style="color:#000000">&nbsp; &nbsp; &nbsp;cout &lt;&lt; </span><span style="color:#a31515">&quot;Odd&quot;</span><span style="color:#000000">;</span></code></p>
			</td>
		</tr>
	</tbody>
</table>

<ul>
	<li style="list-style-type:disc"><span style="color:#000000">Dấu {} (n&ecirc;u c&oacute;) sử dụng trong ng&ocirc;n ngữ lập tr&igrave;nh n&ecirc;n được canh thẳng h&agrave;ng theo một trong hai c&aacute;ch sau:</span></li>
</ul>

<table border="1" cellpadding="5" cellspacing="0" style="border-collapse:collapse; line-height:10px; width:100%">
	<tbody>
		<tr>
			<td style="width:50%">
			<p><code><span style="color:#0000ff">if</span><span style="color:#000000"> ()</span></code></p>

			<p><code><span style="color:#000000">{</span></code></p>

			<p><code><span style="color:#000000">&nbsp; &nbsp;&hellip;</span></code></p>

			<p><code><span style="color:#000000">}</span></code></p>

			<p><code><span style="color:#0000ff">else</span></code></p>

			<p><code><span style="color:#000000">{</span></code></p>

			<p><code><span style="color:#000000">&nbsp; &nbsp;&hellip;</span></code></p>

			<p><code><span style="color:#000000">}</span></code></p>
			</td>
			<td>
			<p><code><span style="color:#0000ff">if</span><span style="color:#000000"> () {</span></code></p>

			<p><code><span style="color:#000000">&nbsp; &nbsp;&hellip;</span></code></p>

			<p><code><span style="color:#000000">}</span></code></p>

			<p><code><span style="color:#0000ff">else</span><span style="color:#000000"> {</span></code></p>

			<p><code><span style="color:#000000">&nbsp; &nbsp;&hellip;</span></code></p>

			<p><code><span style="color:#000000">}</span></code></p>
			</td>
		</tr>
	</tbody>
</table>

<p><span style="color:#000000">Để tr&aacute;nh những lỗi li&ecirc;n quan vấn đề n&agrave;y, lời khuy&ecirc;n l&agrave; c&aacute;c bạn n&ecirc;n viết cặp mở { v&agrave; đ&oacute;ng } trước khi viết nội dung khối lệnh giữa ch&uacute;ng.&nbsp; T&ugrave;y từng &ldquo;trường ph&aacute;i&rdquo; m&agrave; họ sẽ &ldquo;t&ocirc;n s&ugrave;ng&rdquo; một trong hai c&aacute;ch tr&ecirc;n kh&aacute;c nhau, chẳng hạn những lập tr&igrave;nh vi&ecirc;n C++, C# thường sử dụng c&uacute; ph&aacute;p b&ecirc;n tr&aacute;i, c&ograve;n những lập tr&igrave;nh vi&ecirc;n Java hay Javascript thường sử dụng c&uacute; ph&aacute;p b&ecirc;n phải.&nbsp;</span></p>

<ul>
	<li style="list-style-type:disc"><span style="color:#000000">C&aacute;c khối lệnh con của c&aacute;c c&acirc;u lệnh n&agrave;o đ&oacute; n&ecirc;n d&ugrave;ng tab thụt v&agrave;o v&agrave; n&ecirc;n c&oacute; một d&ograve;ng trắng giữa c&aacute;c khối lệnh c&oacute; những mục đ&iacute;ch kh&aacute;c nhau.</span></li>
</ul>

<table border="1" cellpadding="5" cellspacing="0" style="border-collapse:collapse; line-height:10px; width:100%">
	<tbody>
		<tr>
			<td style="width:50%">
			<p><code><span style="color:#008000">// bad</span></code></p>

			<p><code><span style="color:#0000ff">if</span><span style="color:#000000"> (a == b)</span></code></p>

			<p><code><span style="color:#000000">{</span></code></p>

			<p><code><span style="color:#000000">a += c;</span></code></p>

			<p><code><span style="color:#000000">c--;</span></code></p>

			<p><code><span style="color:#000000">}&nbsp;</span></code></p>

			<p><code><span style="color:#0000ff">else</span><span style="color:#000000">&nbsp;</span></code></p>

			<p><code><span style="color:#000000">{</span></code></p>

			<p><code><span style="color:#000000">a -= c;</span></code></p>

			<p><code><span style="color:#000000">c++;</span></code></p>

			<p><code><span style="color:#000000">}</span></code></p>

			<p>&nbsp;</p>

			<p><code><span style="color:#008000">// bad</span></code></p>

			<p><code><span style="color:#0000ff">char</span><span style="color:#000000"> ten[100];</span></code></p>

			<p><code><span style="color:#0000ff">float</span><span style="color:#000000"> diem;</span></code></p>

			<p><code><span style="color:#000000">cout </span><span style="color:#008080">&lt;&lt;</span><span style="color:#000000"> </span><span style="color:#a31515">&quot;Ten:&quot;</span><span style="color:#000000">;</span></code></p>

			<p><code><span style="color:#000000">cin.getline(ten, 100);</span></code></p>

			<p><code><span style="color:#000000">cout </span><span style="color:#008080">&lt;&lt;</span><span style="color:#000000"> </span><span style="color:#a31515">&quot;Diem:&quot;</span><span style="color:#000000">;</span></code></p>

			<p><code><span style="color:#000000">cin </span><span style="color:#008080">&gt;&gt;</span><span style="color:#000000"> diem;</span></code></p>
			</td>
			<td>
			<p>&nbsp;</p>

			<p><code><span style="color:#008000">// good</span></code></p>

			<p><code><span style="color:#0000ff">if</span><span style="color:#000000"> (a == b)</span></code></p>

			<p><code><span style="color:#000000">{</span></code></p>

			<p><code><span style="color:#000000">&nbsp; &nbsp;a += c;</span></code></p>

			<p><code><span style="color:#000000">&nbsp; &nbsp;c--;</span></code></p>

			<p><code><span style="color:#000000">}</span></code></p>

			<p><code><span style="color:#0000ff">else</span></code></p>

			<p><code><span style="color:#000000">{</span></code></p>

			<p><code><span style="color:#000000">&nbsp; &nbsp;a -= c;</span></code></p>

			<p><code><span style="color:#000000">&nbsp; &nbsp;c++;</span></code></p>

			<p><code><span style="color:#000000">}</span></code></p>

			<p>&nbsp;</p>

			<p><code><span style="color:#008000">// good</span></code></p>

			<p><code><span style="color:#0000ff">char</span><span style="color:#000000"> ten[100];</span></code></p>

			<p><code><span style="color:#0000ff">float</span><span style="color:#000000"> diem;</span></code></p>

			<p>&nbsp;</p>

			<p><code><span style="color:#000000">cout </span><span style="color:#008080">&lt;&lt;</span><span style="color:#000000"> </span><span style="color:#a31515">&quot;Ten:&quot;</span><span style="color:#000000">;</span></code></p>

			<p><code><span style="color:#000000">cin.getline(ten, 100);</span></code></p>

			<p>&nbsp;</p>

			<p><code><span style="color:#000000">cout </span><span style="color:#008080">&lt;&lt;</span><span style="color:#000000"> </span><span style="color:#a31515">&quot;Diem:&quot;</span><span style="color:#000000">;</span></code></p>

			<p><code><span style="color:#000000">cin </span><span style="color:#008080">&gt;&gt;</span><span style="color:#000000"> diem;</span></code></p>
			</td>
		</tr>
	</tbody>
</table>

<ul>
	<li style="list-style-type:disc"><span style="color:#000000">C&aacute;c to&aacute;n tử v&agrave; to&aacute;n hạng trong một biểu thức n&ecirc;n c&aacute;ch nhau một khoảng trắng, trừ c&aacute;c to&aacute;n tử ++, --, -.</span></li>
</ul>

<table border="1" cellpadding="5" cellspacing="0" style="border-collapse:collapse; line-height:10px; width:100%">
	<tbody>
		<tr>
			<td style="width:50%">
			<p><code><span style="color:#000000">a=b+c; </span><span style="color:#008000">// bad</span></code></p>

			<p><code><span style="color:#000000">a = b + c; </span><span style="color:#008000">// good</span></code></p>

			<p><code><span style="color:#000000">a ++; </span><span style="color:#008000">// bad</span></code></p>

			<p><code><span style="color:#000000">a++; </span><span style="color:#008000">// good</span></code></p>

			<p><code><span style="color:#000000">a = - b; </span><span style="color:#008000">// bad</span></code></p>

			<p><code><span style="color:#000000">a = -b; </span><span style="color:#008000">// good</span></code></p>
			</td>
		</tr>
	</tbody>
</table>

<ul>
	<li style="list-style-type:disc"><span style="color:#000000">N&ecirc;n c&oacute; một khoảng trắng ở sau dấu phẩy (,) trong danh s&aacute;ch c&aacute;c tham số của h&agrave;m, khai b&aacute;o biến. Tương tự dấu chấm phẩy (;) trong một số c&acirc;u lệnh, chẳng hạn for.</span></li>
</ul>

<table border="1" cellpadding="5" cellspacing="0" style="border-collapse:collapse; line-height:10px; width:100%">
	<tbody>
		<tr>
			<td style="width:50%">
			<p><code><span style="color:#0000ff">int</span><span style="color:#000000"> a,b; </span><span style="color:#008000">// bad</span></code></p>

			<p><code><span style="color:#0000ff">int</span><span style="color:#000000"> a, b; </span><span style="color:#008000">// good</span></code></p>

			<p><code><span style="color:#0000ff">double</span><span style="color:#000000"> tinhTong(</span><span style="color:#0000ff">double</span><span style="color:#000000"> a[],</span><span style="color:#0000ff">int</span><span style="color:#000000"> n); </span><span style="color:#008000">// bad</span></code></p>

			<p><code><span style="color:#0000ff">double</span><span style="color:#000000"> tinhTong(</span><span style="color:#0000ff">double</span><span style="color:#000000"> a[] , </span><span style="color:#0000ff">int</span><span style="color:#000000"> n); </span><span style="color:#008000">// bad</span></code></p>

			<p><code><span style="color:#0000ff">double</span><span style="color:#000000"> tinhTong(</span><span style="color:#0000ff">double</span><span style="color:#000000"> a[], </span><span style="color:#0000ff">int</span><span style="color:#000000"> n); </span><span style="color:#008000">// good</span></code></p>

			<p><code><span style="color:#000000">tinhTong(2,3); </span><span style="color:#008000">// bad</span></code></p>

			<p><code><span style="color:#000000">tinhTong(2, 3); </span><span style="color:#008000">// good</span></code></p>

			<p><code><span style="color:#0000ff">for</span><span style="color:#000000"> (</span><span style="color:#0000ff">int</span><span style="color:#000000"> i=0;i&lt;n;i++) </span><span style="color:#008000">// bad</span></code></p>

			<p><code><span style="color:#0000ff">for</span><span style="color:#000000"> (</span><span style="color:#0000ff">int</span><span style="color:#000000"> i = 0; i &lt; n; i++); </span><span style="color:#008000">// good</span></code></p>
			</td>
		</tr>
	</tbody>
</table>

<ul>
	<li style="list-style-type:disc"><span style="color:#000000">N&ecirc;n c&oacute; khoảng trắng giữa từ kh&oacute;a v&agrave; dấu mở ngoặc (, nhưng kh&ocirc;ng n&ecirc;n c&oacute; giữa t&ecirc;n h&agrave;m v&agrave; dấu mở ngoặc (</span></li>
</ul>

<table border="1" cellpadding="5" cellspacing="0" style="border-collapse:collapse; line-height:10px; width:100%">
	<tbody>
		<tr>
			<td style="width:50%">
			<p><code><span style="color:#0000ff">if</span><span style="color:#000000">(a == b) </span><span style="color:#008000">// bad</span></code></p>

			<p><code><span style="color:#0000ff">if</span><span style="color:#000000"> (a == b) </span><span style="color:#008000">// good</span></code></p>

			<p><code><span style="color:#000000">strcmp (a, b); </span><span style="color:#008000">// bad</span></code></p>

			<p><code><span style="color:#000000">strcmp(a, b); </span><span style="color:#008000">// good</span></code></p>
			</td>
		</tr>
	</tbody>
</table>

<ul>
</ul>

<p><span style="color:#000000"><strong><em>Nguy&ecirc;n tắc 7</em></strong></span><span style="color:#000000">: n&ecirc;n viết ghi ch&uacute; (comment) cho chương tr&igrave;nh. Một số quan điểm kh&ocirc;ng đồng t&igrave;nh với việc viết ghi ch&uacute; n&agrave;y, họ thi&ecirc;n về viết m&atilde; nguồn hơn, v&agrave; cho rằng m&atilde; nguồn n&ecirc;n viết đủ trong s&aacute;ng, r&otilde; r&agrave;ng, dễ hiểu để n&oacute;i l&ecirc;n được mục ti&ecirc;u v&agrave; &yacute; nghĩa của n&oacute;. Tuy nhi&ecirc;n ở mức đại tr&agrave;, ch&uacute;ng t&ocirc;i khuy&ecirc;n c&aacute;c bạn n&ecirc;n viết ghi ch&uacute; ngắn gọn, c&ocirc; đọng cho những đoạn chương tr&igrave;nh c&oacute; logic phức tạp, nhưng cũng kh&ocirc;ng n&ecirc;n lạm dụng qu&aacute; nhiều ch&uacute; th&iacute;ch, m&agrave; cần giữ t&iacute;nh đơn giản, dễ đọc của m&atilde; nguồn.&nbsp;</span></p>

<p><span style="color:#000000"><strong><em>Nguy&ecirc;n tắc 8</em></strong></span><span style="color:#000000">: nguy&ecirc;n tắc về số lượng</span></p>

<p><span style="color:#000000">Một d&ograve;ng lệnh cũng kh&ocirc;ng n&ecirc;n viết qu&aacute; d&agrave;i, thường nếu d&agrave;i hơn 80 k&yacute; tự n&ecirc;n viết xuống d&ograve;ng cho dễ theo d&otilde;i.</span></p>

<p><span style="color:#000000">Số lượng d&ograve;ng code trong h&agrave;m (phương thức), tổng số d&ograve;ng code trong tập tin, số lượng phương thức trong lớp, số lượng lớp trong g&oacute;i cần c&oacute; giới hạn để dễ kiểm so&aacute;t. H&agrave;m thường kh&ocirc;ng n&ecirc;n qu&aacute; 30 d&ograve;ng code, lớp kh&ocirc;ng n&ecirc;n qu&aacute; 500 d&ograve;ng code.&nbsp;</span></p>

<p><span style="color:#000000">Số lượng tham số trong h&agrave;m (phương thức) kh&ocirc;ng n&ecirc;n vượt qu&aacute; 5.</span></p>

<p><span style="color:#000000">C&aacute;c c&acirc;u lệnh lồng nhau kh&ocirc;ng n&ecirc;n qu&aacute; 4 cấp.&nbsp;</span></p>

<p><span style="color:#000000"><strong><em>Nguy&ecirc;n tắc 9 (DRY: Don&rsquo;t Repeat Yourself)</em></strong></span><span style="color:#000000">: như t&ecirc;n gọi của nguy&ecirc;n tắc n&agrave;y m&atilde; nguồn thực hiện c&ugrave;ng mục đ&iacute;ch n&ecirc;n hạn chế tối đa việc lặp lại, những m&atilde; nguồn như vậy n&ecirc;n thiết kế sao cho mọi nơi d&ugrave;ng chung một chỗ. Điều n&agrave;y gi&uacute;p &iacute;t rất nhiều trong việc quản l&yacute; m&atilde; nguồn, hay trong t&igrave;nh huống cần phải chỉnh sửa luống xử l&yacute; cho đoạn chương tr&igrave;nh đ&oacute;.</span></p>

<p><span style="color:#000000">Lấy v&iacute; dụ đơn giản như sau: chương tr&igrave;nh y&ecirc;u cầu nhập hai số nguy&ecirc;n a, b trong phạm vi [0, 100] v&agrave; phải l&agrave; số chẵn, đoạn chương tr&igrave;nh minh họa bằng C++</span></p>

<table border="1" cellpadding="5" cellspacing="0" style="border-collapse:collapse; line-height:10px; width:100%">
	<tbody>
		<tr>
			<td style="width:50%">
			<p><code><span style="color:#0000ff">int</span><span style="color:#000000"> main()</span></code></p>

			<p><code><span style="color:#000000">{</span></code></p>

			<p><code><span style="color:#0000ff">&nbsp; &nbsp;int</span><span style="color:#000000"> a, b;</span></code></p>

			<p><code><span style="color:#000000">&nbsp; &nbsp;cin </span><span style="color:#008080">&gt;&gt;</span><span style="color:#000000"> a;</span></code></p>

			<p>&nbsp;</p>

			<p><code><span style="color:#0000ff">&nbsp; &nbsp;if</span><span style="color:#000000"> (a &gt;= 0 &amp;&amp; a &lt; 100 &amp;&amp; a % 2 == 0)</span></code></p>

			<p><code><span style="color:#000000">&nbsp; &nbsp; &nbsp; cout </span><span style="color:#008080">&lt;&lt;</span><span style="color:#000000"> a;</span></code></p>

			<p>&nbsp;</p>

			<p><code><span style="color:#000000">&nbsp; &nbsp;cin </span><span style="color:#008080">&gt;&gt;</span><span style="color:#000000"> b;</span></code></p>

			<p><code><span style="color:#0000ff">&nbsp; &nbsp;if</span><span style="color:#000000"> (b &gt;= 0 &amp;&amp; b &lt; 100 &amp;&amp; b % 2 == 0)</span></code></p>

			<p><code><span style="color:#000000">&nbsp; &nbsp; &nbsp; cout </span><span style="color:#008080">&lt;&lt;</span><span style="color:#000000"> b;</span></code></p>

			<p>&nbsp;</p>

			<p><code><span style="color:#0000ff">&nbsp; &nbsp;return</span><span style="color:#000000"> 0;</span></code></p>

			<p><code><span style="color:#000000">}</span></code></p>
			</td>
		</tr>
	</tbody>
</table>

<ul>
</ul>

<p><span style="color:#000000">Một thời gian sau một y&ecirc;u cầu bổ sung l&agrave; a v&agrave; b phải l&agrave; số nguy&ecirc;n tố. Khi đ&oacute; ta cần cập nhật kiểm tra n&agrave;y ở 2 nơi, r&otilde; r&agrave;ng điều n&agrave;y kh&ocirc;ng ổn ch&uacute;t n&agrave;o, nếu chương tr&igrave;nh dần trở n&ecirc;n lớn hơn việc cập nhật chương tr&igrave;nh như vậy sẽ dẫn đến rất nhiều rủi ro như cập nhật thiếu, kh&ocirc;ng nhất quan giữa c&aacute;c chổ cập nhật, v.v. Giải ph&aacute;p đơn giản nhất trong trường hợp n&agrave;y c&oacute; thể viết th&ecirc;m một h&agrave;m kiểm tra điều kiện đầu v&agrave;o như sau:</span></p>

<table border="1" cellpadding="5" cellspacing="0" style="border-collapse:collapse; line-height:10px; width:100%">
	<tbody>
		<tr>
			<td style="width:50%">
			<p><code><span style="color:#0000ff">bool</span><span style="color:#000000"> checkData(</span><span style="color:#0000ff">int</span><span style="color:#000000"> </span><span style="color:#808080">n</span><span style="color:#000000">) {</span></code></p>

			<p><code><span style="color:#0000ff">&nbsp; &nbsp;if</span><span style="color:#000000"> (</span><span style="color:#808080">n</span><span style="color:#000000"> &gt;= 0 &amp;&amp; </span><span style="color:#808080">n</span><span style="color:#000000"> &lt; 100 &amp;&amp; </span><span style="color:#808080">n</span><span style="color:#000000"> % 2 == 0)</span></code></p>

			<p><code><span style="color:#0000ff">&nbsp; &nbsp; &nbsp; return</span><span style="color:#000000"> </span><span style="color:#0000ff">true</span><span style="color:#000000">;</span></code></p>

			<p><code><span style="color:#0000ff">&nbsp; &nbsp;return</span><span style="color:#000000"> </span><span style="color:#0000ff">false</span><span style="color:#000000">;</span></code></p>

			<p><code><span style="color:#000000">}</span></code></p>

			<p>&nbsp;</p>

			<p><code><span style="color:#0000ff">int</span><span style="color:#000000"> main()</span></code></p>

			<p><code><span style="color:#000000">{</span></code></p>

			<p><code><span style="color:#0000ff">&nbsp; &nbsp;int</span><span style="color:#000000"> a, b;</span></code></p>

			<p><code><span style="color:#000000">&nbsp; &nbsp;cin </span><span style="color:#008080">&gt;&gt;</span><span style="color:#000000"> a;</span></code></p>

			<p>&nbsp;</p>

			<p><code><span style="color:#0000ff">&nbsp; &nbsp;if</span><span style="color:#000000"> (checkData(a))</span></code></p>

			<p><code><span style="color:#000000">&nbsp; &nbsp; &nbsp; cout </span><span style="color:#008080">&lt;&lt;</span><span style="color:#000000"> a;</span></code></p>

			<p>&nbsp;</p>

			<p><code><span style="color:#000000">&nbsp; &nbsp;cin </span><span style="color:#008080">&gt;&gt;</span><span style="color:#000000"> b;</span></code></p>

			<p><code><span style="color:#0000ff">&nbsp; &nbsp;if</span><span style="color:#000000"> (checkData(b))</span></code></p>

			<p><code><span style="color:#000000">&nbsp; &nbsp; &nbsp; cout </span><span style="color:#008080">&lt;&lt;</span><span style="color:#000000"> b;</span></code></p>

			<p>&nbsp;</p>

			<p><code><span style="color:#0000ff">&nbsp; &nbsp;return</span><span style="color:#000000"> 0;</span></code></p>

			<p><code><span style="color:#000000">}</span></code></p>
			</td>
		</tr>
	</tbody>
</table>
<p></p>
<h3><span style="color:#000000"><strong>Tổng kết</strong></span></h3>

<p><span style="color:#000000">Phong c&aacute;ch lập tr&igrave;nh kh&ocirc;ng phải l&agrave; một vấn đề thi&ecirc;n về kỹ thuật, tuy nhi&ecirc;n n&oacute; &ldquo;l&agrave;m đẹp&rdquo; hơn cho những vấn đề kỹ thuật trong lập tr&igrave;nh rất nhiều. Mục ti&ecirc;u hướng tới phong c&aacute;ch lập tr&igrave;nh gi&uacute;p chương tr&igrave;nh dễ đọc, dễ hiểu, dễ bảo tr&igrave;, dễ t&aacute;i sử dụng, dễ d&agrave;ng chuyển giao giữa c&aacute;c th&agrave;nh vi&ecirc;n n&ecirc;n sẽ giảm bớt nhiều rủi ro về nh&acirc;n sự, to&agrave;n bộ chương tr&igrave;nh sẽ trở n&ecirc;n nhất qu&aacute;n, đồng bộ. Tr&ecirc;n đ&acirc;y ch&uacute;ng t&ocirc;i liệt k&ecirc; một số nguy&ecirc;n tắc th&ocirc;ng dụng nhất trong lập tr&igrave;nh, c&aacute;c bạn c&oacute; thể d&ugrave;ng c&aacute;c từ kh&oacute;a ch&uacute;ng t&ocirc;i cung cấp để t&igrave;m kiếm th&ecirc;m t&agrave;i liệu, c&aacute;c nguy&ecirc;n tắc hữu &iacute;t tr&ecirc;n internet.</span></p>

<p>&nbsp;</p>
